name: Tests

# event that triggers workflow
# runs on every commit
on: 
  push:

jobs:
  linting-and-testing:
    # specifies the os that the job will run on 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.12]
    steps:
    # downloads the repository code to the runner's file system for workflow access
    - uses: actions/checkout@v4
      with:
        ref: 'pipeline_adjustments'

    # installs poetry without automatic creation of a virtual environment
    - name: Install poetry
      uses: snok/install-poetry@v1
    - run: poetry config virtualenvs.prefer-active-python true
       
    # sets up python environment with specified versions 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: cp312
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'   
    
    - run: echo '${{ steps.cp312.outputs.cache-hit }}' # true if cache-hit occurred on the primary key

    # get rid of DeprecationWarning related to Jupyter paths when running pytest
    - name: Set JUPYTER_PLATFORM_DIRS environment variable
      env:
        JUPYTER_PLATFORM_DIRS: 1
      run: |
        echo "JUPYTER_PLATFORM_DIRS=${JUPYTER_PLATFORM_DIRS}" >> $GITHUB_ENV  

    - name: Install dependencies
      run: poetry install --extras "sil dev analysis"

    - name: Run type checker
      run: poetry run mypy vessim

    #- name: Run linter
    #  run: poetry run ruff vessim

    #- name: Run tests
    #  run: python -m pytest