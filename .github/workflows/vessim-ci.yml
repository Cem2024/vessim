name: CI

# event that triggers workflow
# runs on every pull request
on: 
  pull_request:
    branches:
      - main

jobs:
  linting-and-testing:
    # specifies the os that the job will run on 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.11]
    steps:
    # downloads the repository code to the runner's file system for workflow access
    - uses: actions/checkout@v2
    - uses: chartboost/ruff-action@v1
       
    # sets up python environment with specified versions 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}   
    
    # get rid of DeprecationWarning related to Jupyter paths when running pytest
    - name: Set JUPYTER_PLATFORM_DIRS environment variable
      env:
        JUPYTER_PLATFORM_DIRS: 1
      run: |
        echo "JUPYTER_PLATFORM_DIRS=${JUPYTER_PLATFORM_DIRS}" >> $GITHUB_ENV   
    
    # installs poetry without automatic creation of a virtual environment
    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: false
    
    # build package out of local poject, install it and run example scenario 
    - name: Build the project as a package
      run: poetry build

    - name: Install the package with linting dependencies
      run: |
        pip install dist/*.whl
        pip install pytest mypy types-psutil pandas-stubs types-requests black ruff

    - name: Run example scenario
      run: python -m examples.cosim_example

    # run type checker
    - name: Run type checker
      run: mypy vessim

    # run ruff
    - name: Run linter
      run: ruff .
        
    # run tests
    - name: Run tests
      run: python -m pytest
